apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'checkstyle'

assemble.dependsOn('lint')
check.dependsOn('checkstyle')

configurations {
    javadocDeps
    ktlint
}

checkstyle {
    toolVersion '8.29'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.getbouncer.cardscan.demo"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    lintOptions {
        enable "Interoperability"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.core:core-ktx:$androidx_version"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    implementation "com.getbouncer:cardscan-base:2.0.0001"
    implementation "com.getbouncer:cardscan-ui:2.0.0001"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
}

dependencies {
    testImplementation "androidx.test:core:$androidx_version"
    testImplementation "androidx.test:runner:$androidx_version"
    testImplementation "junit:junit:4.13"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

dependencies {
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

dependencies {
    ktlint "com.pinterest:ktlint:0.36.0"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
